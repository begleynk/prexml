c
att
c
att
ch
val
par
q
v
ch
a
q
c
a
c
tree.nodes.first.children.first.parent
tree.nodes.first.children.first.value
tree.nodes.first.children.first.children
tree.nodes.first.children.first.attributes["three"]
tree.nodes.first.children.first.attributes["three"}
tree.nodes.first.children.first.attributes
tree.nodes.first.children.first.parent
tree.nodes.first.children.first
tree.nodes.first.children.count
tree.nodes.first.children
tree.nodes.first.value
tree.nodes.first.root?
tree.nodes.first.parent
tree.nodes.first
tree.nodesfirst
tree.children.first
tree
c
quit
tree.nodes.first.children.first
tree.nodes.first.children.count
tree.nodes.first.children
tree.nodes.first
tree
q
c
@iterator.peek
c
tree.nodes.first.children
tree.nodes.first
tree.nodes
q
quit
tree.nodes
tree
q
c
n
char
n
char
n
char
n
char
n
char
n
char
n
char
n
quit
n
char
n
char
n
char
quit
char
q
@iterator.peek
quit
tree.children
tree.class
tree.root?
tree.parent
tree
tree.children.length
tree.children.count
tree.children
tree
c
node_buffer
c
node_buffer
